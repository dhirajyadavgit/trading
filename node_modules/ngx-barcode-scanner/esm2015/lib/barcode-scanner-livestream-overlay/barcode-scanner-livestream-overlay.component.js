import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { BarcodeScannerLivestreamComponent } from '../barcode-scanner-livestream/barcode-scanner-livestream.component';
export class BarcodeScannerLivestreamOverlayComponent {
    constructor() {
        this._started = false;
        this.width = '90vw';
        this.maxWidth = '640px';
        this.valueChanges = new EventEmitter();
        this.started = new EventEmitter();
        this._showScanner = false;
    }
    get isStarted() {
        return this._started;
    }
    get showScanner() {
        return this._showScanner;
    }
    ngOnDestroy() {
        this.scanner.stop();
    }
    show() {
        this._showScanner = true;
        this.scanner.start();
    }
    hide() {
        this._showScanner = false;
        this.scanner.stop();
    }
    onStarted(value) {
        this._started = value;
        this.started.next(value);
    }
    onValueChanges(result) {
        this.valueChanges.next(result);
    }
}
BarcodeScannerLivestreamOverlayComponent.decorators = [
    { type: Component, args: [{
                selector: 'barcode-scanner-livestream-overlay',
                template: "<div class=\"barcode-scanner-livestream-overlay\" [hidden]=\"!showScanner\">\n  <div\n    class=\"barcode-scanner-livestream-overlay-content\"\n    [style.width]=\"width\"\n    [style.max-width]=\"maxWidth\"\n    [style.height]=\"height\"\n    [style.max-height]=\"maxHeight\"\n  >\n    <div\n      class=\"barcode-scanner-livestream-overlay-close\"\n      *ngIf=\"isStarted\"\n      (click)=\"hide()\"\n    >\n      X\n    </div>\n    <barcode-scanner-livestream\n      [type]=\"type\"\n      [deviceId]=\"deviceId\"\n      [config]=\"config\"\n      (valueChanges)=\"onValueChanges($event)\"\n      (started)=\"onStarted($event)\"\n    ></barcode-scanner-livestream>\n  </div>\n</div>\n",
                styles: [".barcode-scanner-livestream-overlay{background-color:rgba(0,0,0,.3);bottom:0;left:0;overflow:hidden;position:fixed;right:0;top:0;width:100%;z-index:1000}.barcode-scanner-livestream-overlay .barcode-scanner-livestream-overlay-content{left:50%;position:absolute;top:50%;transform:translate(-50%,-50%)}.barcode-scanner-livestream-overlay .barcode-scanner-livestream-overlay-content .barcode-scanner-livestream-overlay-close{background-color:#fff;border:2px solid #000;border-radius:2rem;box-sizing:initial;cursor:pointer;font-size:1.3rem;height:1.5rem;line-height:1.5rem;margin:-1rem;padding:.5rem;position:absolute;right:0;text-align:center;width:1.5rem;z-index:100}"]
            },] }
];
BarcodeScannerLivestreamOverlayComponent.propDecorators = {
    type: [{ type: Input }],
    deviceId: [{ type: Input }],
    width: [{ type: Input }],
    maxWidth: [{ type: Input }],
    height: [{ type: Input }],
    maxHeight: [{ type: Input }],
    config: [{ type: Input }],
    valueChanges: [{ type: Output }],
    started: [{ type: Output }],
    scanner: [{ type: ViewChild, args: [BarcodeScannerLivestreamComponent,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyY29kZS1zY2FubmVyLWxpdmVzdHJlYW0tb3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWJhcmNvZGUtc2Nhbm5lci9zcmMvIiwic291cmNlcyI6WyJsaWIvYmFyY29kZS1zY2FubmVyLWxpdmVzdHJlYW0tb3ZlcmxheS9iYXJjb2RlLXNjYW5uZXItbGl2ZXN0cmVhbS1vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxFQUFFLFNBQVMsRUFDL0QsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sb0VBQW9FLENBQUM7QUFPdkgsTUFBTSxPQUFPLHdDQUF3QztJQUxyRDtRQU9ZLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFXaEIsVUFBSyxHQUFHLE1BQU0sQ0FBQztRQUVmLGFBQVEsR0FBRyxPQUFPLENBQUM7UUFRbEIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBRTFDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBS3hDLGlCQUFZLEdBQUcsS0FBSyxDQUFDO0lBNkJqQyxDQUFDO0lBdkRHLElBQUksU0FBUztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN6QixDQUFDO0lBMEJELElBQUksV0FBVztRQUNYLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUM3QixDQUFDO0lBRUQsV0FBVztRQUNQLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUk7UUFDQSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsU0FBUyxDQUFDLEtBQWM7UUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELGNBQWMsQ0FBQyxNQUFjO1FBQ3pCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLENBQUM7OztZQTlESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLG9DQUFvQztnQkFDOUMsNHJCQUFrRTs7YUFFckU7OzttQkFVSSxLQUFLO3VCQUVMLEtBQUs7b0JBRUwsS0FBSzt1QkFFTCxLQUFLO3FCQUVMLEtBQUs7d0JBRUwsS0FBSztxQkFFTCxLQUFLOzJCQUVMLE1BQU07c0JBRU4sTUFBTTtzQkFFTixTQUFTLFNBQUMsaUNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT3V0cHV0LCBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBRdWFnZ2FKU0NvbmZpZ09iamVjdCB9IGZyb20gJ0BlcmljYmxhZGUvcXVhZ2dhMic7XG5pbXBvcnQgeyBCYXJjb2RlU2Nhbm5lckxpdmVzdHJlYW1Db21wb25lbnQgfSBmcm9tICcuLi9iYXJjb2RlLXNjYW5uZXItbGl2ZXN0cmVhbS9iYXJjb2RlLXNjYW5uZXItbGl2ZXN0cmVhbS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2JhcmNvZGUtc2Nhbm5lci1saXZlc3RyZWFtLW92ZXJsYXknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9iYXJjb2RlLXNjYW5uZXItbGl2ZXN0cmVhbS1vdmVybGF5LmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9iYXJjb2RlLXNjYW5uZXItbGl2ZXN0cmVhbS1vdmVybGF5LmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIEJhcmNvZGVTY2FubmVyTGl2ZXN0cmVhbU92ZXJsYXlDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuXG4gICAgcHJpdmF0ZSBfc3RhcnRlZCA9IGZhbHNlO1xuXG4gICAgZ2V0IGlzU3RhcnRlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N0YXJ0ZWQ7XG4gICAgfVxuXG4gICAgLy8gSW5wdXRzXG4gICAgQElucHV0KCkgdHlwZTogc3RyaW5nIHwgc3RyaW5nW107XG5cbiAgICBASW5wdXQoKSBkZXZpY2VJZDogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgd2lkdGggPSAnOTB2dyc7XG5cbiAgICBASW5wdXQoKSBtYXhXaWR0aCA9ICc2NDBweCc7XG5cbiAgICBASW5wdXQoKSBoZWlnaHQ6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIG1heEhlaWdodDogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgY29uZmlnOiBQYXJ0aWFsPFF1YWdnYUpTQ29uZmlnT2JqZWN0PjtcblxuICAgIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZXMgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcblxuICAgIEBPdXRwdXQoKSBzdGFydGVkID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuXG4gICAgQFZpZXdDaGlsZChCYXJjb2RlU2Nhbm5lckxpdmVzdHJlYW1Db21wb25lbnQpXG4gICAgc2Nhbm5lcjogQmFyY29kZVNjYW5uZXJMaXZlc3RyZWFtQ29tcG9uZW50O1xuXG4gICAgcHJpdmF0ZSBfc2hvd1NjYW5uZXIgPSBmYWxzZTtcblxuICAgIGdldCBzaG93U2Nhbm5lcigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Nob3dTY2FubmVyO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgICAgICB0aGlzLnNjYW5uZXIuc3RvcCgpO1xuICAgIH1cblxuICAgIHNob3coKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX3Nob3dTY2FubmVyID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zY2FubmVyLnN0YXJ0KCk7XG4gICAgfVxuXG4gICAgaGlkZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fc2hvd1NjYW5uZXIgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zY2FubmVyLnN0b3AoKTtcbiAgICB9XG5cbiAgICBvblN0YXJ0ZWQodmFsdWU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fc3RhcnRlZCA9IHZhbHVlO1xuICAgICAgICB0aGlzLnN0YXJ0ZWQubmV4dCh2YWx1ZSk7XG4gICAgfVxuXG4gICAgb25WYWx1ZUNoYW5nZXMocmVzdWx0OiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy52YWx1ZUNoYW5nZXMubmV4dChyZXN1bHQpO1xuICAgIH1cblxufVxuIl19