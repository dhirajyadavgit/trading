{"version":3,"file":"ngx-barcode-scanner.js","sources":["../../projects/ngx-barcode-scanner/src/lib/barcode-scanner-livestream/barcode-scanner-livestream.config.ts","../../projects/ngx-barcode-scanner/src/lib/barcode-scanner-livestream/barcode-types.ts","../../projects/ngx-barcode-scanner/src/lib/barcode-scanner-livestream/barcode-scanner-livestream.component.ts","../../projects/ngx-barcode-scanner/src/lib/barcode-scanner-livestream/barcode-scanner-livestream.module.ts","../../projects/ngx-barcode-scanner/src/lib/barcode-scanner-livestream-overlay/barcode-scanner-livestream-overlay.component.ts","../../projects/ngx-barcode-scanner/src/lib/barcode-scanner-livestream-overlay/barcode-scanner-livestream-overlay.module.ts","../../../../projects/ngx-barcode-scanner/src/public-api.ts","../../../../projects/ngx-barcode-scanner/src/ngx-barcode-scanner.ts"],"sourcesContent":["import { QuaggaJSConfigObject } from '@ericblade/quagga2';\n\nexport const DEFAULT_CONFIG: QuaggaJSConfigObject = {\n    inputStream: {\n        name: 'Live',\n        type: 'LiveStream',\n        target: null,\n        constraints: {\n            width: { min: 640 },\n            height: { min: 480 },\n            aspectRatio: { min: 1, max: 2 },\n            facingMode: 'environment', // or user\n        },\n        singleChannel: false // true: only the red color-channel is read\n    },\n    locator: {\n        patchSize: 'medium',\n        halfSample: true\n    },\n    locate: true,\n    numOfWorkers: 4,\n    decoder: {\n        readers: ['code_128_reader']\n    }\n};\n\n","export const BARCODE_TYPES = [\n    'code_128',\n    'code_39',\n    'code_39_vin',\n    'ean',\n    'ean_extended',\n    'ean_8',\n    'upc',\n    'upc_e',\n    'codabar',\n    'i2of5',\n    '2of5',\n    'code_93'\n];\n\nexport function mapToReader(value: string | string[]) {\n    if (typeof value === 'string') {\n        checkBarCodeType(value);\n        return [ mapToBarcodeType(value)];\n    } else {\n        return value.map(val => {\n            checkBarCodeType(val);\n            return mapToBarcodeType(val);\n        });\n    }\n}\n\nfunction checkBarCodeType(value: string) {\n    if (!BARCODE_TYPES.some(t => t === value)) {\n        throw new Error(`This barcode type '${value}' is not valid.`);\n    }\n}\n\nfunction mapToBarcodeType(value) {\n    return `${value}_reader`;\n}\n","import {\n    Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport Quagga, { QuaggaJSConfigObject } from '@ericblade/quagga2';\nimport defaultsDeep from 'lodash.defaultsdeep';\nimport { DEFAULT_CONFIG } from './barcode-scanner-livestream.config';\nimport { mapToReader } from './barcode-types';\n\n@Component({\n    selector: 'barcode-scanner-livestream',\n    templateUrl: './barcode-scanner-livestream.component.html',\n    styleUrls: ['./barcode-scanner-livestream.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class BarcodeScannerLivestreamComponent implements OnChanges, OnDestroy {\n    // Inputs\n    @Input() type: string | string[];\n\n    @Input() deviceId: string;\n\n    @Input() maxWidth = '100%';\n\n    @Input() maxHeight: string;\n\n    @Input() config: Partial<QuaggaJSConfigObject>;\n\n    // Outputs\n    @Output() valueChanges = new EventEmitter();\n\n    @Output() started = new EventEmitter();\n\n    @ViewChild('BarcodeScanner') barcodeScanner: ElementRef<HTMLDivElement>;\n\n    get _maxWidth(): string {\n        return this.maxWidth ? `${this.maxWidth}` : 'auto';\n    }\n\n    get _maxHeight(): string {\n        return this.maxHeight ? `${this.maxHeight}` : 'auto';\n    }\n\n    private _started = false;\n\n    get isStarted(): boolean {\n        return this._started;\n    }\n\n    private configQuagga: QuaggaJSConfigObject;\n\n    ngOnDestroy(): void {\n        this.stop();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.restart();\n    }\n\n    private _init(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            Quagga.onProcessed((result) => this.onProcessed(result));\n\n            Quagga.onDetected((result) => this.onDetected(result));\n\n            this.configQuagga = defaultsDeep({}, this.config, DEFAULT_CONFIG);\n\n            this.configQuagga.inputStream.target = this.barcodeScanner.nativeElement;\n\n            if (this.type) {\n                this.configQuagga.decoder.readers = mapToReader(this.type);\n            }\n\n            if (this.deviceId) {\n                this.configQuagga.inputStream.constraints.deviceId = this.deviceId;\n            }\n\n            Quagga.init(this.configQuagga, (err) => {\n                if (err) {\n                    console.log(err);\n                    return reject(err);\n                }\n\n                resolve();\n            });\n        });\n    }\n\n    async start(): Promise<void> {\n        if (!this._started) {\n            await this._init();\n            Quagga.start();\n            this._started = true;\n            this.started.next(true);\n        }\n    }\n\n    stop(): void {\n        if (this._started) {\n            Quagga.stop();\n            this._started = false;\n            this.started.next(false);\n        }\n    }\n\n    restart(): void {\n        if (this._started) {\n            this.stop();\n            this.start();\n        }\n    }\n\n    onProcessed(result: any): any {\n        const drawingCtx = Quagga.canvas.ctx.overlay;\n        const drawingCanvas = Quagga.canvas.dom.overlay;\n\n        if (result) {\n            if (result.boxes) {\n                drawingCtx.clearRect(0, 0,\n                    parseInt(drawingCanvas.getAttribute('width'), 10),\n                    parseInt(drawingCanvas.getAttribute('height'), 10));\n                result.boxes.filter((box: any) => {\n                    return box !== result.box;\n                }).forEach((box: any) => {\n                    Quagga.ImageDebug.drawPath(box, {\n                        x: 0,\n                        y: 1,\n                    }, drawingCtx, {\n                        color: 'green',\n                        lineWidth: 2,\n                    });\n                });\n            }\n\n            if (result.box) {\n                Quagga.ImageDebug.drawPath(result.box, {\n                    x: 0,\n                    y: 1,\n                }, drawingCtx, {\n                    color: '#00F',\n                    lineWidth: 2,\n                });\n            }\n\n            if (result.codeResult && result.codeResult.code) {\n                Quagga.ImageDebug.drawPath(result.line, {\n                    x: 'x',\n                    y: 'y',\n                }, drawingCtx, {\n                    color: 'red',\n                    lineWidth: 3,\n                });\n            }\n\n        }\n    }\n\n    onDetected(result): void {\n        this.valueChanges.next(result);\n    }\n\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BarcodeScannerLivestreamComponent } from './barcode-scanner-livestream.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        BarcodeScannerLivestreamComponent\n    ],\n    exports: [\n        BarcodeScannerLivestreamComponent\n    ]\n})\nexport class BarcodeScannerLivestreamModule { }\n","import {\n    Component, EventEmitter, Input, OnDestroy, Output, ViewChild\n} from '@angular/core';\nimport { QuaggaJSConfigObject } from '@ericblade/quagga2';\nimport { BarcodeScannerLivestreamComponent } from '../barcode-scanner-livestream/barcode-scanner-livestream.component';\n\n@Component({\n    selector: 'barcode-scanner-livestream-overlay',\n    templateUrl: './barcode-scanner-livestream-overlay.component.html',\n    styleUrls: ['./barcode-scanner-livestream-overlay.component.scss'],\n})\nexport class BarcodeScannerLivestreamOverlayComponent implements OnDestroy {\n\n    private _started = false;\n\n    get isStarted(): boolean {\n        return this._started;\n    }\n\n    // Inputs\n    @Input() type: string | string[];\n\n    @Input() deviceId: string;\n\n    @Input() width = '90vw';\n\n    @Input() maxWidth = '640px';\n\n    @Input() height: string;\n\n    @Input() maxHeight: string;\n\n    @Input() config: Partial<QuaggaJSConfigObject>;\n\n    @Output() valueChanges = new EventEmitter<string>();\n\n    @Output() started = new EventEmitter<boolean>();\n\n    @ViewChild(BarcodeScannerLivestreamComponent)\n    scanner: BarcodeScannerLivestreamComponent;\n\n    private _showScanner = false;\n\n    get showScanner(): boolean {\n        return this._showScanner;\n    }\n\n    ngOnDestroy(): void {\n        this.scanner.stop();\n    }\n\n    show(): void {\n        this._showScanner = true;\n        this.scanner.start();\n    }\n\n    hide(): void {\n        this._showScanner = false;\n        this.scanner.stop();\n    }\n\n    onStarted(value: boolean): void {\n        this._started = value;\n        this.started.next(value);\n    }\n\n    onValueChanges(result: string): void {\n        this.valueChanges.next(result);\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BarcodeScannerLivestreamModule } from '../barcode-scanner-livestream/barcode-scanner-livestream.module';\nimport { BarcodeScannerLivestreamOverlayComponent } from './barcode-scanner-livestream-overlay.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BarcodeScannerLivestreamModule\n    ],\n    declarations: [\n        BarcodeScannerLivestreamOverlayComponent\n    ],\n    exports: [\n        BarcodeScannerLivestreamOverlayComponent\n    ]\n})\nexport class BarcodeScannerLivestreamOverlayModule { }\n\n","/*\n * Public API Surface of ngx-barcode-scanner\n */\n\nexport * from './lib/barcode-scanner-livestream-overlay/index';\nexport * from './lib/barcode-scanner-livestream/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}